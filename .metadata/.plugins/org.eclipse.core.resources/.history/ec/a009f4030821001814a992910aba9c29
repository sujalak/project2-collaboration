package com.niit.DAOImpl;

import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.niit.DAO.BlogDAO;
import com.niit.Model.Blog;

@SuppressWarnings("deprecation")
@Repository("blogDAO")
@Transactional

public class BlogDAOImpl  implements BlogDAO{
	@Autowired
	private SessionFactory sessionFactory;


	

	public BlogDAOImpl(SessionFactory sessionFactory) {
		super();
		this.sessionFactory = sessionFactory;
	}
public boolean saveBlog(Blog blog) {
	Session session = sessionFactory.openSession();
	try {
		session.saveOrUpdate(blog);
		session.flush();
		return true;
	} catch (HibernateException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		
	}
	
	return false;
		
	}
public boolean updateBlog(Blog blog) {
	Session session = sessionFactory.openSession();
	try {
		session.update(blog);
		session.flush();
		return true;
	} catch (HibernateException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		
	}
	
	return false;
		
	}



	public Blog getBlogById(int blogId) {
		Session session = sessionFactory.openSession();
		return (Blog) session.get(Blog.class, blogId);

	}

	public boolean delete(String blogId) {
		try {

			Blog blog = getBlogById(blogId);
			sessionFactory.getCurrentSession().delete(blog);
			sessionFactory.getCurrentSession().flush();

			return true;
		} catch (HibernateException e) {
		
			e.printStackTrace();
		}
		return false;


	}

	public List<Blog> getAllBlogs() {
		Session session = sessionFactory.getCurrentSession();
		Query query = session.createQuery("from Blog ORDER BY blogId ASC");
		List<Blog> blogs = query.list();
		return blogs;

	}

}
